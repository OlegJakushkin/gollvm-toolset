FROM ubuntu:20.04

ARG DEBIAN_FRONTEND=noninteractive
RUN apt update && apt install -y build-essential wget cmake git python3 ninja-build m4 libssl-dev cmake

WORKDIR /root/

ARG USING_PROXY

RUN git clone -n --recursive https://github.com/llvm/llvm-project.git  && \
    cd llvm-project && \
    git checkout 09629215c272f09e3ebde6cc7eac9625d28910ff

ENV LLVM_SRC_PATH=llvm-project/llvm
ENV GOLLVM_SRC_PATH=$LLVM_SRC_PATH/tools/gollvm

RUN if [ -n "$USING_PROXY" ] ; then \
        git config --global http.https://go.googlesource.com.proxy $USING_PROXY && \
        git config --global https.https://go.googlesource.com.proxy $USING_PROXY ; fi

ARG TIME_STAMP
RUN git clone -n --recursive https://go.googlesource.com/gollvm $LLVM_SRC_PATH/tools/gollvm && \
     cd $LLVM_SRC_PATH/tools/gollvm && \
     git checkout c6e77fa144d7b2890b2225f2dcecd5579cbba9c6

RUN git clone -n --recursive https://go.googlesource.com/gofrontend $GOLLVM_SRC_PATH/gofrontend && \
    cd $GOLLVM_SRC_PATH/gofrontend && \
    git checkout 5e658f4659c551330ea68f5667e4f951b218f32d

RUN git clone  -n --recursive https://github.com/libffi/libffi.git $GOLLVM_SRC_PATH/libgo/libffi && \
    cd  $GOLLVM_SRC_PATH/libgo/libffi && \
    git checkout  ab1677106605aba1c27665964ff90bea59612ce3

RUN git clone -n --recursive https://github.com/ianlancetaylor/libbacktrace.git $GOLLVM_SRC_PATH/libgo/libbacktrace && \
    cd  $GOLLVM_SRC_PATH/libgo/libbacktrace && \
    git checkout 2446c66076480ce07a6bd868badcbceb3eeecc2e

ENV BUILD_DIR=llvm-project/release
RUN mkdir -p $BUILD_DIR && cd $BUILD_DIR && \
        cmake ../llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=X86 -DLLVM_ENABLE_ASSERTIONS=On \
              -DLLVM_ENABLE_RTTI=On  -DLLVM_USE_LINKER=gold -G Ninja && \
        ninja gollvm && ninja install-gollvm && ninja install

ENV LD_LIBRARY_PATH=/usr/local/lib64

RUN if [ -n "$USING_PROXY" ] ; then \
        go env -w GO111MODULE=on && \
        go env -w GOPROXY=https://goproxy.cn,direct ; fi


